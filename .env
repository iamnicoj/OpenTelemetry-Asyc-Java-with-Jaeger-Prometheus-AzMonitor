# AGENTTYPE can be otel or applicationinsights
AGENTTYPE=otel

# If an Application Insights connection string is different from "none" in the OTEL_AZ_MONITOR_CONNECTION
# when runnning in the Otel agent mode, the AzureMonitorTraceExporter will be register as an additional 
# span processor in the OTEL SDK Tracer provider. This will provide flexible scenarios when running under 
# full OTEL mode while exporting telemetry to Azure Monitor at the same time.
OTEL_AZ_MONITOR_CONNECTION=none

# Set the OTEL_TRACES_EXPORTER=none option when AGENTTYPE=applicationinsights to avoid conflicts
OTEL_TRACES_EXPORTER=jaeger

# Point your browser to http://localhost:16686/ when all the containers are up and running to view traces.
# This enpoint is used by the Open Telemetry SDK to push traces to the collector:
OTEL_EXPORTER_JAEGER_ENDPOINT=http://jaeger:14250

# When running on AGENTTYPE=otel you can set the OTEL_METRICS_EXPORTER=prometheus to enable the OpenTelemetry 
# Java Agent to send metrics to the Prometheus service
OTEL_METRICS_EXPORTER=none
# OTEL_METRICS_EXPORTER=prometheus

# Default logging level for the OpenTelemetry Java Agent
OTEL_LOG_LEVEL=debug
OTEL_JAVAAGENT_DEBUG=false

